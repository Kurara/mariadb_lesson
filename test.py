import unittest
import os
from main import TextProcessor, MariaDBManagement


class TestProcessor(unittest.TestCase):

    def setUp(self):
        import os
        self.BASE_PATH = os.path.dirname(os.path.abspath(__file__))
        self.filepath = ""
        # A variable to maintain at the end of each test
        # files generated by them
        self.maintain_files = False

    def test_csv_read(self):
        filepath = self.BASE_PATH + "/mockups/complaints.csv"
        processor = TextProcessor()
        processor.read_csv(filepath)

    def test_insert_cliente(self):
        conection = MariaDBManagement()
        conection.connect_db("complaints")
        import datetime
        data = {
            "Nome": "Primo cliente",
            "Indirizzo": "Strada principale",
            "Eta": 34,
            "Data_registrazione": datetime.datetime.now().isoformat()
        }
        conection.insert("Clienti", data)
        conection.disconect_db()

    """Non tests per esseguirli soltanto una volta (in ordine di aparizione)"""
    def creazione_db(self):
        conection = MariaDBManagement()
        conection.connect_db()
        conection.create_database()
        conection.disconect_db()

    def creazione_clienti(self):
        conection = MariaDBManagement()
        conection.connect_db("complaints")
        conection.create_table()
        conection.disconect_db()

    def modificazione_reclami(self):
        conection = MariaDBManagement()
        conection.connect_db("complaints")
        conection.modify_table()
        conection.disconect_db()

    def add_all_dati_reclami(self):
        conection = MariaDBManagement()
        conection.connect_db("complaints")
        conection.add_columns()
        conection.disconect_db()

    def tearDown(self):
        if os.path.exists(self.filepath) and not self.maintain_files:
            os.unlink(self.filepath)

